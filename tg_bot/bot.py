import telebot
import os
import json

import functions.creating_buttons as cb
from functions.api import API

TOKEN = os.environ.get('TG_TOKEN')
API_TOKEN = os.environ.get('API_TOKEN')

API_URL = os.environ.get('API_URL')
ORGANIZATION_SLUG = os.environ.get('ORGANIZATION_SLUG')
DEPARTAMENT_SLUG = os.environ.get('DEPARTAMENT_SLUG')

if not (API_URL and ORGANIZATION_SLUG and DEPARTAMENT_SLUG):
    API_URL = 'http://127.0.0.1:8000/api/v1/'
    ORGANIZATION_SLUG = 'testovaya-organizaciya'
    DEPARTAMENT_SLUG = 'podrazdelenie-1'

bot = telebot.TeleBot(TOKEN, threaded=False)

api = API(api_url=API_URL, organization_slug=ORGANIZATION_SLUG, department_slug=DEPARTAMENT_SLUG, token=API_TOKEN)


# ==================== –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ ==================== #

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_message(message):
    chat_id = message.chat.id
    categories = api.get_categories()
    bot.send_message(chat_id=chat_id, text='''–ü—Ä–∏–≤–µ—Ç! –Ø –í–∞—à –ª–∏—á–Ω—ã–π –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ü¶æ\n
                                            –í—ã–±–∏—Ä–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç,\n
                                            —Ç–∞–º –í—ã –Ω–∞–π–¥–µ—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–µü•≥\n 
                                            –ï—Å–ª–∏ –í—ã –Ω–µ –Ω–∞—à–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Åüò∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å Call-—Ü–µ–Ω—Ç—Ä–æ–ºüôÑ
                                                                                '''
                                           ,
                     reply_markup=cb.make_inline_keyboard_categories(categories=categories))


# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def start_message(message):
    chat_id = message.chat.id
    bot.send_message(chat_id=chat_id, text='''–ü—Ä–∏–≤–µ—Ç! –Ø –í–∞—à –ª–∏—á–Ω—ã–π –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ü¶æ\n
                                            –í—ã–±–∏—Ä–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç,\n
                                            —Ç–∞–º –í—ã –Ω–∞–π–¥–µ—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–µü•≥\n 
                                            –ï—Å–ª–∏ –í—ã –Ω–µ –Ω–∞—à–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Åüò∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å Call-—Ü–µ–Ω—Ç—Ä–æ–ºüôÑ
                                                                                ''')


# ==================== –û–±—Ä–∞–±–æ—Ç–∫–∞ Inline –∫–Ω–æ–ø–æ–∫ ==================== #
@bot.callback_query_handler(func=lambda call: True)
def handle_query(message):
    chat_id = message.message.chat.id
    message_id = message.message.message_id
    data = message.data
    print('callback data: ', data)

    if 'category_id' in data:
        data = json.loads(data)
        category_id = data['category_id']

        target = data['target']

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
        if not category_id == '0':
            try:
                category_info = api.get_category_info(category_id)
            except Exception as e:
                print(e)
                return

            parent_id = str(category_info['parent_id'])
            category_name = category_info["name"] + '\n'
        else:
            # –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ –Ω–µ –Ω—É–∂–Ω–∞ –Ω–∞ 1 —É—Ä–æ–≤–Ω–µ –¥–µ—Ä–µ–≤–∞
            parent_id = None
            category_name = ''

        if target == 'categories':

            try:
                # –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ API
                categories = api.get_categories(category_id=category_id)
            except Exception as e:
                print(e)
                return

            try:
                # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                bot.edit_message_text(message_id=message_id, chat_id=chat_id, text=f'{category_name}'
                                                                                   f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                      reply_markup=cb.make_inline_keyboard_categories(categories=categories,
                                                                                      last_category_id=parent_id))
            except Exception as e:
                print(e)
                return

        elif target == 'questions':

            try:
                # –ø–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ API
                questions = api.get_questions(category_id=category_id)
            except Exception as e:
                print(e)
                return
            print(questions)
            try:
                # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤
                bot.edit_message_text(message_id=message_id, chat_id=chat_id, text=f'{category_name}'
                                                                                   f'–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å',
                                      reply_markup=cb.make_inline_keyboard_questions(questions=questions,
                                                                                     last_category_id=parent_id))
            except Exception as e:
                print(e)
                return


    elif 'question_id' in data:
        data = json.loads(data)
        question_id = data['question_id']
        category_id = data['category']

        try:
            question_info = api.get_question_info(question_id=question_id)
        except Exception as e:
            print(e)
            return

        question = question_info['question']
        answer = question_info['answer']

        try:
            # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤
            bot.edit_message_text(message_id=message_id, chat_id=chat_id, text=f'<b>–í–æ–ø—Ä–æ—Å:</b>\n'
                                                                               f'{question}\n\n'
                                                                               f'<b>–û—Ç–≤–µ—Ç:</b>\n'
                                                                               f'{answer}',
                                  reply_markup=cb.make_inline_keyboard_back_from_question(category_id=category_id),
                                  parse_mode='HTML')
        except Exception as e:
            print(e)
            return


if __name__ == '__main__':
    bot.skip_pending = True
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ...')
    bot.polling()
